{namespace docsYeomanGenerator}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call docs.layout}
	{param content kind="html"}
		<h1>Yeoman generator</h1>

		<p>
			You can organize your <strong>Metal.js</strong> project in any way you
			want, but to start out we recommend using
			the <a href="http://npmjs.com/package/generator-metal">Yeoman generator</a> we've
			created, which prepares both the project structure as well as a basic
			development workflow for you.
		</p>

		<p>To use it:</p>

		<ol>
			<li>
				<p>
					Install <a href="https://nodejs.org">NPM</a> v3.0.0 or newer (if you
					don't have it yet)
				</p>
			</li>
			<li>
				<p>Install <strong>Yeoman</strong> and <strong>generator-metal</strong>:</p>
				<p><code>[sudo] npm i -g yo generator-metal</code></p>
			</li>
			<li>
				<p>
					Open the folder that you want to use on your terminal and type: <code>yo metal</code>
				</p>
			</li>
			<li>
				<p>Answer the generator prompts:</p>
				<img src="../images/docs/prompts.png" width="500"><br>
			</li>
			<li><p>Wait for the generator to finish fetching dependencies</p></li>
		</ol>

		<p>After those steps you'll get a directory tree similar to this:</p>

		<textarea class="code" data-mode="javascript">{literal}└── metal-modal
    ├── demos
    │   └── index.html
    ├── node_modules
    ├── package.json
    ├── src
    │   ├── Modal.js
    │   ├── Modal.soy // Only if Soy was chosen
    │   └── modal.scss
    └── test
        └── Modal.js{/literal}</textarea>

		<p>
			<strong>generator-metal</strong> will already include some npm scripts
			to help you build and test your code, as well as many gulp tasks
			via <a href="/docs/building.html#gulp-metal">gulp-metal</a>.
		</p>

		<p>
			By the way, the boilerplate zip provided by
			the <a href="/docs/#boilerplate">getting started guide</a> was created
			using <strong>generator-metal</strong>.
		</p>
	{/param}
{/call}
{/template}
